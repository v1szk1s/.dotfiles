#!/bin/bash

# List all audio output devices (Audio/Sink)
# Format: ID Description
devices=$(wpctl status | awk '
  BEGIN { output = 0 }
  /Audio Sinks:/ { output = 1; next }
  /^[^ ]/ { output = 0 }
  output && /^[ \t]*[0-9]+/ {
    id = $1
    sub(/[^0-9]/, "", id)
    $1 = ""; sub(/^ /, "")
    print id ":" $0
  }')

# Select a device
chosen=$(echo "$devices" | dmenu -i -p "Select output device:")

# Set as default and move streams
if [ -n "$chosen" ]; then
  id="${chosen%%:*}"
  wpctl set-default "$id"

  # Move all sink inputs (audio streams) to the new default
  while read -r line; do
    if [[ "$line" =~ ^\ \*\ ([0-9]+)\. ]]; then
      stream_id="${BASH_REMATCH[1]}"
      wpctl move "$stream_id" "$id"
    fi
  done < <(wpctl status | grep 'Stream')
fi



#
# #!/bin/sh
#
# # Get the current default sink
# current_sink=$(pactl info | grep "Default Sink" | awk '{print $3}')
#
# # List sinks, marking the current one with a star
# sinks=$(pactl list short sinks | awk -v current="$current_sink" '{
#     if ($2 == current) {
#         print "* " $2
#     } else {
#         print "  " $2
#     }
# }')
#
# # Let user choose a sink using dmenu
# chosen=$(echo "$sinks" | dmenu -l 20 -i -p "Select audio sink:")
#
# # Exit if nothing selected
# [ -z "$chosen" ] && exit 1
#
# # Remove the star/whitespace prefix
# chosen_sink=$(echo "$chosen" | sed 's/^[* ]*//')
#
# # Set default sink
# pactl set-default-sink "$chosen_sink"
#
# # Move all existing sink inputs to the new sink
# for input in $(pactl list short sink-inputs | awk '{print $1}'); do
#     pactl move-sink-input "$input" "$chosen_sink"
# done
#
# # Optional: notify user
# notify-send "Audio Sink Changed" "$chosen_sink"
#
